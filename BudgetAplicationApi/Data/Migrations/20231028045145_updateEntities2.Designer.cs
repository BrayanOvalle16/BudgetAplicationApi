// <auto-generated />
using System;
using BudgetAplicationApi.Data.ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetAplicationApi.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231028045145_updateEntities2")]
    partial class updateEntities2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Compania", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngresoTotal")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Companias");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Contabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Naturaleza")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Contabilidades");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Jwt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiraEn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Jwt");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Movimiento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CompaniaID")
                        .HasColumnType("int");

                    b.Property<int>("ContabilidadId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Monto")
                        .HasColumnType("int");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompaniaID");

                    b.HasIndex("ContabilidadId");

                    b.HasIndex("TransaccionId");

                    b.HasIndex("UsuariosID");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Rol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Descripcion")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Transaccion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompaniaId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompaniaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Usuarios", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RolUsuarios", b =>
                {
                    b.Property<int>("RolesID")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosID")
                        .HasColumnType("int");

                    b.HasKey("RolesID", "UsuariosID");

                    b.HasIndex("UsuariosID");

                    b.ToTable("RolUsuarios");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Jwt", b =>
                {
                    b.HasOne("BudgetAplicationApi.Api.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Movimiento", b =>
                {
                    b.HasOne("BudgetAplicationApi.Api.Models.Compania", null)
                        .WithMany("Movimientos")
                        .HasForeignKey("CompaniaID");

                    b.HasOne("BudgetAplicationApi.Api.Models.Contabilidad", "Contabilidad")
                        .WithMany("Movimientos")
                        .HasForeignKey("ContabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetAplicationApi.Api.Models.Transaccion", "Transaccion")
                        .WithMany("Movimientos")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetAplicationApi.Api.Models.Usuarios", null)
                        .WithMany("Movimientos")
                        .HasForeignKey("UsuariosID");

                    b.Navigation("Contabilidad");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Transaccion", b =>
                {
                    b.HasOne("BudgetAplicationApi.Api.Models.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetAplicationApi.Api.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compania");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RolUsuarios", b =>
                {
                    b.HasOne("BudgetAplicationApi.Api.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetAplicationApi.Api.Models.Usuarios", null)
                        .WithMany()
                        .HasForeignKey("UsuariosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Compania", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Contabilidad", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Transaccion", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("BudgetAplicationApi.Api.Models.Usuarios", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
